{"version":3,"file":"vue.js","sources":["../src/utils/index.js","../src/global-api/index.js","../src/compile/generate.js","../src/compile/parseAst.js","../src/compile/index.js","../src/observer/arr.js","../src/observer/index.js","../src/initState.js","../src/vnode/patch.js","../src/lifecycle.js","../src/init.js","../src/vnode/index.js","../src/index.js"],"sourcesContent":["export const HOOKS = [\n    \"beforeCreate\",\n    \"created\",\n    \"beforeMount\",\n    \"mounted\",\n    \"beforeUpdate\",\n    \"updated\",\n    \"activated\",\n    \"deactivated\",\n    \"beforeDestroy\",\n    \"destroyed\",\n    \"errorCaptured\",\n]\n    \n\n  \n// 策略模式\nlet starts = []\nstarts.data = function() {} // 合并data\nstarts.computed = function() {} // 合并计算属性\nstarts.watch = function() {} // 合并watch\nstarts.methods = function() {} // 合并方法\n\n// 遍历生命周期\nHOOKS.forEach(hooks => {\n    starts[hooks] = mergeHook\n})\n\n// 这部分专门处理生命周期里的内容，区分于下面的mergeOptions,这里只是给每个属性一个方法，并不去执行它，下面去执行它\nfunction mergeHook(parentVal,childVal) {\n    \n    // Vue.options = {created: [a,b,c],watch:[a,b]}\n    if(childVal){\n        if(parentVal){\n            // 将父子的值拼接再一起\n            return parentVal.concat(childVal)\n        }else {\n            return [childVal]\n        }\n    }else {\n        return parentVal\n    }\n}\n\n// 传入参数对应着 Vue.options,mixin\nexport function mergeOptions(parent,child) {  //{}  {created}\n    console.log(parent,child)\n    // Vue.options = {created: [a,b,c],watch:[a,b]}\n    const options = {}\n    // 如果有父亲，没有儿子\n    for(let key in parent){\n        mergeField(key)\n    }\n    // 有儿子，没有父亲\n    for(let key in  child){ \n        mergeField(key)\n    }\n\n    // 合并函数\n    function mergeField(key) {\n        // 根据key  策略模式\n        if(starts[key]) {  //\n            options[key] = starts[key](parent[key],child[key])\n        }else{\n            options[key] = child[key]\n        }\n    }\n    console.log(options)\n    return options\n}","import { mergeOptions } from \"../utils/index\"\n\nexport function initGlobalApi(Vue){\n    //源码\n    // Vue.options = {created: [a,b,c],watch:[a,b]}\n    Vue.options = {}\n    Vue.Mixin = function(mixin) { // 传入的是一个对象 {}  \n        // 对象的合并\n        this.options = mergeOptions(this.options,mixin)\n         console.log(Vue.options)\n    }   \n} ","\n/**\n * <div id=\"app\"> hello {{ msg }} <h></h> </div>\n * \n * render(){  _c 解析标签\n *    return _c('div',{id:app},_v('hello'+_s()),_c)\n * }\n*/\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;   // {{ }}\n// 处理属性\nfunction genProps(attrs) {\n    let str = '';\n    // attrs 是对象的形式 [{...},{...},{...}]\n    for (let i = 0; i < attrs.length; i++) {\n        let attr = attrs[i] // 拿到每一个对象\n        // 判断是否为行内 内联样式   {id:app,style:{color:red,fo}}  {value: 'color: red;font-size: 20px;'}\n        if (attr.name === 'style') {\n            let obj = {}\n            attr.value.split(';').forEach(item => {\n                let [key, val] = item.split(':')\n                obj[key] = val\n            });\n            attr.value = obj\n        }\n        // 拼接\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\n    }\n    return `{${str.slice(0, -1)}}`\n}\n\n// 处理子节点(1)\nfunction genChildren(el) {\n    let children = el.children  // 有无子集\n    if (children) {\n        // 处理数组，将对象处理成字符串\n        return children.map(child => gen(child)).join(',')   \n    }\n}\n//  具体处理子节点\nfunction gen(node) { // 1：元素   3：文本\n    if (node.type === 1) { // 如果是元素或标签，继续递归\n        return generate(node)\n    } else { // 文本    (1) 只是文本 hello   (2)   差值表达式\n        let text = node.text  // 获取文本\n\n        // 解析不带 {{}} 表达式的\n        if (!defaultTagRE.test(text)) {\n            return `_v(${JSON.stringify(text)})`\n        }\n        // 带有 {{ }} 差值表达式   hello {{name}} , {{msg}} 你好\n        let tokens = []\n        /**\n         *  TODO: 下方使用了while循环，循环中使用了正则表达式匹配差值表达式，由于正则符号带有全局标志'g'，因此每次调用exec\n         *        会从上一次匹配结束的位置继续搜索下一个匹配的位置，将它重置为0，确保从文本的开头开始搜索下一个匹配的位置\n         */\n        let lastindex = defaultTagRE.lastIndex = 0 // 重置lastIndex 这样可以重复使用正则判断\n        let match\n        while (match = defaultTagRE.exec(text)) {  //使用exec 执行匹配操作，并返回一个数组；每次调用都从上一次匹配结束的位置继续搜索\n            // console.log(match)\n            let index = match.index\n            if (index > lastindex) {  \n                // 添加除了差值运算符之前的内容\n                tokens.push(JSON.stringify(text.slice(lastindex, index))) \n            }\n            // 解决 {{}}\n            tokens.push(`_s(${match[1].trim()})`)\n            lastindex = index + match[0].length\n        }\n        // 如果差值表达式的结束位置小于整个文本长度，说明后面还有内容，就后面的内容也处理掉\n        if (lastindex < text.length) {\n            // slice表示从lastindex开始，一直截取到字符串的末尾\n            tokens.push(JSON.stringify(text.slice(lastindex)))\n        }\n        // 最终返回结果\n        return `_v(${tokens.join('+')})`\n\n    }\n}\n\n// 处理标签部分\nexport function generate(el) {  // ast\n    // console.log(el)\n    // 注意属性 {id:app,style:{color:red,fo}}\n    let children = genChildren(el)\n    // console.log(children)\n    let code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'} ,${children ? `${children}` : ''})`\n    // console.log(code)\n    // 这里一定要返回，否则上面调用的时候不会处理\n    return code\n    \n}","// <div id=\"app\"> hello {{ msg }} <h></h></div>\n// ast语法树 vnode \n/**\n * {\n * tag: 'div',\n * attrs: [{id:\"app\"}],\n * children:[tag:null,text:hello,{tag:'div'}]\n * }\n */\n\n// 标签名 a-aaa\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\n// 命名空间标签 aa:aa-xxx\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <span:xx> \n// 开始标签-捕获标签名\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\n// 结束标签-匹配标签结尾的 </div>\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\n// 匹配属性\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; {/* <div id=\"app\"></div> */ }\n// 匹配标签结束的 >\nconst startTagClose = /^\\s*(\\/?)>/;\n// 匹配 {{ }} 表达式\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\n\n// 遍历\n// 创建一个ast语法树\n// <div id=\"app\"> hello {{ msg }} <h></h></div>\nfunction createASTElement(tag,attrs){\n    return {\n        tag,    // 原树  是div或者span或等等\n        attrs,  // 属性\n        children:[], // 子节点\n        type:1,      // 元素类型\n        parent: null\n    }\n}\n\nlet root; // 根元素\nlet createParent // 当前元素的父亲\n// 数据结构  栈\nlet stack = []  // [div,h]\n\nfunction start(tag, attrs) {  // 开始标签\n    let element = createASTElement(tag,attrs)\n    if(!root){\n        root = element\n    }\n    createParent = element\n    stack.push(element)\n}\n\nfunction charts(text) { // 获取文本\n    // console.log(text, '文本内容部分')\n    // 去掉空格\n    text = text.replace(/a/g,'')  // /a 表示空格 /g表示全部 /a/g表示全部空格 \n    // 去掉空格 写法II\n    // text = text.split(' ').join('')\n    if(text) {\n        createParent.children.push({\n            type:3,\n            text\n\n\n        })\n    }\n\n}\nfunction end(tag) { // 结束的标签\n    let element = stack.pop()  // 拿到栈中最后一个元素\n    createParent = stack[stack.length-1]\n    if(createParent){ // 元素闭合\n        element.parent = createParent.tag\n        createParent.children.push(element)\n    }\n}\n\n// 创建一个 ast 对象\nexport function parseHTML(html) {\n    // <div id=\"app\"> hello {{ msg }} <h></h></div>  // 开始标签，文本，结束标签\n    while (html) {  // html 为空结束\n        // 判断标签 <>\n        let textEnd = html.indexOf('<') // 如果为0的话 证明第一个是<，说明是一个标签\n        if (textEnd === 0) { // 标签\n            // (1) 开始标签\n            const startTagMatch = parseStartTag() // 开始标签的内容 {}\n            if (startTagMatch) {\n                start(startTagMatch.tagName, startTagMatch.attrs)\n                continue\n            }\n            // (2)结束标签\n            let endTagMatch = html.match(endTag)\n            // console.log(endTagMatch)\n            if (endTagMatch) {\n                advance(endTagMatch[0].length)\n                end(endTagMatch[1])\n                continue\n            }\n        }\n\n        // 文本处理\n        let text\n        if (textEnd > 0) {\n            // console.log(textEnd)\n            // 获取文本内容\n            text = html.substring(0, textEnd)\n            // console.log(text)\n        }\n        if (text) {\n            advance(text.length)\n            charts(text)\n            // console.log(html)\n        }\n        // break;\n    }\n    function parseStartTag() {\n        // 解析开始标签\n        const start = html.match(startTagOpen) // 1.结果 2.false\n        if (start) {\n            // console.log(start)\n            // 创建语法树 ast\n            let match = {\n                tagName: start[1],\n                attrs: []\n            }\n            // 删除 开始标签\n            advance(start[0].length)\n            // 属性\n            // 注意  多个属性需要遍历\n            // 注意  结束标签 \">\"\n            let attr\n            let end\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\n                // console.log(attr)  // {}\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\n                advance(attr[0].length)\n\n            }\n\n\n            // 当字符剩下一个'>'符号的时候，需要通过end去处理它\n            if (end) {\n                // console.log(end)\n                advance(end[0].length)\n                return match\n            }\n        }\n\n    }\n    function advance(n) {\n        // 表示拿到从n开始后面的东西\n        html = html.substring(n)\n        // console.log(html)\n    }\n    // console.log(root)\n    return root\n}","import { generate } from \"./generate\"\nimport { parseHTML } from \"./parseAst\"\n\nexport function compileToFunction(template) {\n\n    // TODO: 一、 将html 变成ast 语法树\n    let ast = parseHTML(template)\n    // console.log(ast)\n\n    // TODO: 二、 将ast语法树变成render函数 (1) ast 语法树变成字符串 (2) 字符串变成函数\n    let code = generate(ast)    // _c_v_s   解析元素：_c  解析文本: _v 解析变量: _s\n \n    // TODO: 三、 将render 字符串变成函数\n    /**\n     * with 语句是js中的一个特殊语句，可以将一个对象作为作用域，使得对象内部的变量可以直接被调用，而无需使用对象本身作为前缀\n     * 可以直接使用 a  而不用Obj.a\n     */\n    let render = new Function(`with(this){return ${code}}`)\n    return render\n}\n","// 重写数组\n// 1. 获取原来的数组方法\nlet oldArrayProtoMethods = Array.prototype\n\n// 2. 继承数组的方法\n/**\n * 使用Object.create() 方法创建一个新对象，并将这个新对象的原型设置为oldArrayProtoMethods\n */\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\n\n// 3.劫持数组的方法\nlet methods = [\n    \"push\",\n    \"pop\",\n    \"unshift\",\n    \"shift\",\n    \"splice\"\n]\n\n// 通过遍历methods数组中的每个方法名，将对应的函数重新定义ArrayMethods\nmethods.forEach(item => {\n    ArrayMethods[item] = function (...args) {\n        // console.log('劫持数组')\n        // 将方法内部的\"this\"指向当前的数组对象，并传入args作为参数\n        /**\n         * oldArrayProtoMethods[item]=arr.push(arr) \n         * 所以得需要绑定this\n         */\n        let result = oldArrayProtoMethods[item].apply(this, args)\n        // console.log(args)   // [{b:6}]\n        // 问题： 数组追加对象的情况 arr arr.push({a:1})\n        let inserted\n        switch (item) {\n            case 'push':\n            case 'unshift':\n                inserted = args\n                break;\n            case 'splice': \n                inserted = args.splice(2)   // arr.splice(0,1,{b:6})  // 除去前面两种方法，所以传参数2\n                break;\n            \n        }\n        // console.log(inserted)\n        \n        let ob = this.__ob__ \n        if(inserted){\n            ob.observerArray(inserted) // 对我们添加的对象进行劫持\n        }\n        return result\n    }\n})","import { ArrayMethods } from \"./arr\"\n\nexport function observer(data) {\n    // console.log(data)\n\n    // TODO: (1) 对象的处理 vue2\n    // 判断\n    if (typeof data != 'object' || data === null) {\n        return data\n    }\n    // 通过一个类进行劫持\n    return new Observer(data)\n\n}\n\nclass Observer {\n    constructor(value) {\n        // 给 data 定义一个属性\n        Object.defineProperty(value, \"__ob__\", {\n            enumerable: false,\n            value: this\n        })\n\n        // console.log(value)\n        // 判断数据是数组还是对象\n        if (Array.isArray(value)) {\n            // 处理数组\n            // 将value的原型指向ArrayMethods\n            value.__proto__ = ArrayMethods\n            // console.log(value)\n            // console.log(value)\n            // 如果你是数组对象\n            this.observerArray(value) // 数组对象劫持\n        } else {\n            // 处理对象\n            this.walk(value)  // 遍历\n        }\n\n    }\n    walk(data) {  // { msg: 'hello' }\n        // 原始写法\n        // let keys = Object.keys(data)\n        // for(let i=0;i<keys.length;i++) {\n        //     // 对我们的每个属性进行劫持\n        //     let key = keys[i]\n        //     let value = data[key]\n        //     definedReactive(data,key,value)\n        // }\n\n        // Es6写法\n        for (let [key, value] of Object.entries(data)) {\n            definedReactive(data, key, value)\n        }\n    }\n\n    observerArray(value) {  // [{a:1}]\n        for (let i = 0; i < value.length; i++) {\n            observer(value[i])\n        }\n    }\n\n}\n// 对 对象中的属性进行劫持\nfunction definedReactive(data, key, value) {\n    observer(value) // 深度代理\n    Object.defineProperty(data, key, {\n        // 获取的时候触发\n        get() {\n            // console.log('获取的时候触发')\n            return value  // 返回值\n        },\n        set(newValue) {\n            // console.log('设置的时候触发')\n            if (newValue === value) return value\n            observer(newValue)  // 如果用户设置的值是对象\n            value = newValue\n        }\n    })\n}\n\n\n// vue2 object.defineProperty 缺点：对象中的一个属性  {a:1,b:2}\n\n// {a:{},list:[]}\n\n// 总结：1) 对象\n// 1、vue2 object.defineProperty 有缺点，只能对对象中的一个属性进行劫持 \n// 2、遍历{a:1,b:2,obj:{}}\n// 3、递归 get    set\n\n\n// 数组 {list: [1,2,3,4],arr:[{a:1}]}\n// 方法函数劫持，劫持数组方法 通过 arr.push()\n\n","import { observer } from \"./observer/index\"\n\nexport function initState(vm) {\n    let opts = vm.$options\n    // console.log(opts)\n    // 判断\n    if(opts.props){\n        initProps()\n    }\n    if(opts.data){\n        initData(vm)\n    }\n    if(opts.watch){\n        initWatch()\n    }\n    if(opts.computed){\n        initComputed()\n    }\n    if(opts.methods){\n        initMethods()\n    }\n\n    // 计算属性\n    function initComputed() {}\n    // 方法属性\n    function initMethods() {}\n    // Props属性\n    function initProps() {}\n    // watch方法\n    function initWatch() {}\n\n\n    // data属性  TODO: 对data初始化 \n    function initData(vm) {\n        // console.log('data初始化',vm) // 1. data可能是对象 2.对象可能是函数\n        let data = vm.$options.data\n        vm._data = typeof data === \"function\" ? data.call(vm):data // 注意 this指向问题\n        data = vm._data  \n        // 数据进行劫持\n        // 将data 上的所有属性代理到实例上 vm {a:1,b:2}\n        \n        for(let key in data){\n            proxy(vm,\"_data\",key) \n        }\n        observer(data)\n    }\n\n    function proxy(vm,source,key) {\n        Object.defineProperty(vm,key,{\n            get() {\n                return vm[source][key]\n            },\n            set(newValue) {\n                vm[source][key] = newValue\n            }\n        })\n    }\n\n    // data{}  (1) 对象 (2) 数组 {a:{b:1},list:[1,2,3],arr:[{}]}\n\n\n\n    \n}","export function patch(oldVnode, vnode) {\n    // console.log(oldVnode, vnode)\n    // vnode -> 真实的 dom\n    // (1) 创建新DOM\n    let el = createEl(vnode)\n    // console.log(el)\n    // (2) 替换dom    \n        /**\n         * 1) 获取父节点\n         * 2) 插入\n         * 3) 删除\n        */\n    \n    // 1.获取父节点\n    let parentEl = oldVnode.parentNode   // 父节点是 body\n    // 将el 插入到原来的元素 oldVnode的下一个兄弟元素之前，相当于替换了老的oldVnode\n    parentEl.insertBefore(el,oldVnode.nextsibling)\n    // 将原来的老元素删掉\n    parentEl.removeChild(oldVnode)\n    return el\n    // console.log(parentEl)\n}\n\n\n// 创建dom\nfunction createEl(vnode) { // vnode: {tag,text,data,children}\n    let { tag, children, key, data, text } = vnode\n\n    // TODO: 判断是标签的情况\n    if (typeof tag === 'string') { // 标签\n        vnode.el = document.createElement(tag)  // 创建元素div\n        // children []\n        if (children.length > 0) { // 有children 还需要创建元素  [{}]\n            children.forEach(child => {\n                // 需要递归，判断是文本还是标签\n                vnode.el.appendChild(createEl(child))\n            });\n\n        }\n    }else{ // TODO: 判断是文本的情况\n        vnode.el = document.createTextNode(text)\n    }\n    return vnode.el\n    \n\n}\n\n\n\n// TODO: 面试题：Vue的渲染流程\n\n/**\n * 数据初始化 -> 对模板进行编译 -> 变成render函数(div变ast语法树 => render字符串 => render函数) \n *           -> 通过render函数变成vnode -> vnode变成真实dom -> 放到页面\n */\n\n","import { patch } from \"./vnode/patch\"\n\n// 组件挂载，进行渲染\nexport function mountCoponent(vm,el){\n    // (1)vm._render 将render函数 变成虚拟DOM (2)vm._updata 将虚拟DOM 变成真实DOM\n    vm._updata(vm._render()) \n}\n\n// 生命周期初始化\nexport function lifecycleMixin(Vue) {\n    // _updata 将虚拟DOM变成真实DOM\n    Vue.prototype._updata = function(vnode){\n        // console.log(vnode)\n        let vm = this\n        // console.log(vm.$el)\n        // 此处传入两个参数  (1) 旧的dom (2) vnode\n        vm.$el =  patch(vm.$el,vnode)\n    }\n    \n}\n\n// （1）render() 函数 -> vnode -> 真实dom ","import { compileToFunction } from \"./compile/index\"\nimport { initState } from \"./initState\"\nimport { mountCoponent } from \"./lifecycle\"\n\n// 为 Vue.js 添加初始化 mixin\nexport function initMixin(Vue) {\n    // 将 _init 方法添加到 Vue.prototype 中\n    Vue.prototype._init = function (options) {\n        // console.log(options)\n\n        // 将当前实例赋值给 vm\n        let vm = this\n        \n        // 将传入的 options 对象赋值给实例的 $options 属性\n        vm.$options = options\n        \n        // 初始化实例状态\n        initState(vm)\n        console.log(vm)\n\n        // 渲染模版  el\n        if (vm.$options.el) {\n            vm.$mount(vm.$options.el)\n\n        }\n        \n    }\n\n    // 创建 $mount方法\n    Vue.prototype.$mount = function (el) {\n        console.log(el)\n        // el template render\n        let vm = this\n        el = document.querySelector(el)  // 获取元素\n        vm.$el = el\n        let options = vm.$options\n        if(!options.render) {  // 没有render\n            let template = options.template\n            if(!template && el) {\n                // 获取html\n                el = el.outerHTML\n                // console.log(el) \n                \n                // 变成ast语法树\n                let render = compileToFunction(el)\n                // console.log(render)\n                // (1) 将render 函数变成vnode  (2) 将vnode 变成真实的DOM 放到页面上\n                options.render = render\n            }  \n        }\n        // 挂载组件 进行渲染\n        mountCoponent(vm,el)  // vm._updata  将虚拟DOM 变成真实DOM  \n                              // vm._render  将render函数 变成虚拟DOM\n    }\n}\n\n// ast语法树 vnode \n /**\n  * {\n  * tag: 'div',\n  * attrs: [{id:\"app\"}],\n  * children:[tag:null,text:hello,{tag:'div'}]\n  * }\n  */\n\n\n\n\n\n\n","export function renderMixin(Vue) {\n    // 处理标签方法\n    Vue.prototype._c = function( ) { \n        // 创建标签\n        return createElement(...arguments)\n    }\n    // 处理文本\n    Vue.prototype._v = function(text) { \n        return createText(text)\n    }\n    // 处理变量\n    Vue.prototype._s = function(val) { \n        return val === null? \"\":(typeof val ==='object')?JSON.stringify(val):val\n    }\n    \n    Vue.prototype._render = function() { // render函数变成 vnode\n        let vm = this   // 拿到实例对象\n        let render = vm.$options.render    // 参考init.js中 options.render = render 变成ast语法树部分\n        let vnode = render.call(this)\n        // console.log(vnode)\n        return vnode\n    }\n\n}\n\n// 创建元素\nfunction createElement(tag,data={},...children){\n    return vnode(tag,data,data.key,children)\n}\n\n// 创建文本\nfunction createText(text) {\n    return vnode(undefined,undefined,undefined,undefined,text)\n}\n\n\n// 创建虚拟DOM  vnode\nfunction vnode(tag,data,key,children,text) {\n    return {\n        tag,\n        data,\n        key,\n        children,\n        text\n\n    }\n}\n\n// vnode   描述节点\n\n/**\n * {\n * tag,\n * text,\n * children\n * \n * }\n */\n\n\n","import { initGlobalApi } from './global-api/index'\nimport {initMixin} from './init'\nimport { lifecycleMixin } from './lifecycle'\nimport { renderMixin } from './vnode/index'\n\n\n\nfunction Vue(options) {\n    // console.log(options)\n    // 初始化\n    this._init(options)\n\n}\n\n//* 状态初始化\ninitMixin(Vue)\n\n//* 生命周期初始化\nlifecycleMixin(Vue) // 添加生命周期\n\n//* 渲染文件\nrenderMixin(Vue)  // 添加_render方法\n\n//* 全局方法 Vue.mixin Vue.coponent Vue.extend\ninitGlobalApi(Vue)\n\nexport default Vue"],"names":["HOOKS","starts","data","computed","watch","methods","forEach","hooks","mergeHook","parentVal","childVal","concat","mergeOptions","parent","child","console","log","options","key","mergeField","initGlobalApi","Vue","Mixin","mixin","defaultTagRE","genProps","attrs","str","_loop","attr","i","name","obj","value","split","item","_item$split","_item$split2","_slicedToArray","val","JSON","stringify","length","slice","genChildren","el","children","map","gen","join","node","type","generate","text","test","tokens","lastindex","lastIndex","match","exec","index","push","trim","code","tag","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createASTElement","root","createParent","stack","start","element","charts","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","advance","substring","n","compileToFunction","template","ast","render","Function","oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","_len","arguments","args","_key","result","apply","inserted","splice","ob","__ob__","observerArray","observer","_typeof","Observer","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","_i","_Object$entries","entries","_Object$entries$_i","definedReactive","get","set","newValue","initState","vm","opts","$options","props","initData","_data","call","proxy","source","patch","oldVnode","vnode","createEl","parentEl","parentNode","insertBefore","nextsibling","removeChild","document","createElement","appendChild","createTextNode","mountCoponent","_updata","_render","lifecycleMixin","$el","initMixin","_init","$mount","querySelector","outerHTML","renderMixin","_c","_v","createText","_s","undefined"],"mappings":"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"}