{"version":3,"file":"vue.js","sources":["../src/compile/parseAst.js","../src/compile/index.js","../src/observer/arr.js","../src/observer/index.js","../src/initState.js","../src/init.js","../src/index.js"],"sourcesContent":["// <div id=\"app\"> hello {{ msg }} <h></h></div>\r\n// ast语法树 vnode \r\n/**\r\n * {\r\n * tag: 'div',\r\n * attrs: [{id:\"app\"}],\r\n * children:[tag:null,text:hello,{tag:'div'}]\r\n * }\r\n */\r\n\r\n// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <span:xx> \r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; {/* <div id=\"app\"></div> */ }\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// 遍历\r\n// 创建一个ast语法树\r\n// <div id=\"app\"> hello {{ msg }} <h></h></div>\r\nfunction createASTElement(tag,attrs){\r\n    return {\r\n        tag,    // 原树  是div或者span或等等\r\n        attrs,  // 属性\r\n        children:[], // 子节点\r\n        type:1,      // 元素类型\r\n        parent: null\r\n    }\r\n}\r\n\r\nlet root; // 根元素\r\nlet createParent // 当前元素的父亲\r\n// 数据结构  栈\r\nlet stack = []  // [div,h]\r\n\r\nfunction start(tag, attrs) {  // 开始标签\r\n    let element = createASTElement(tag,attrs)\r\n    if(!root){\r\n        root = element\r\n    }\r\n    createParent = element\r\n    stack.push(element)\r\n}\r\n\r\nfunction charts(text) { // 获取文本\r\n    // console.log(text, '文本内容部分')\r\n    // 去掉空格\r\n    text = text.replace(/s/g,'')  // /s 表示空格 /g表示全部 /s/g表示全部空格 \r\n    if(text) {\r\n        createParent.children.push({\r\n            type:3,\r\n\r\n        })\r\n    }\r\n\r\n}\r\nfunction end(tag) { // 结束的标签\r\n    let element = stack.pop()  // 拿到栈中最后一个元素\r\n    createParent = stack[stack.length-1]\r\n    if(createParent){ // 元素闭合\r\n        element.parent = createParent.tag\r\n        createParent.children.push(element)\r\n    }\r\n}\r\n\r\n// 创建一个 ast 对象\r\nexport function parseHTML(html) {\r\n    // <div id=\"app\"> hello {{ msg }} <h></h></div>  // 开始标签，文本，结束标签\r\n    while (html) {  // html 为空结束\r\n        // 判断标签 <>\r\n        let textEnd = html.indexOf('<') // 如果为0的话 证明第一个是<，说明是一个标签\r\n        if (textEnd === 0) { // 标签\r\n            // (1) 开始标签\r\n            const startTagMatch = parseStartTag() // 开始标签的内容 {}\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            // (2)结束标签\r\n            let endTagMatch = html.match(endTag)\r\n            // console.log(endTagMatch)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n\r\n        // 文本处理\r\n        let text\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            // 获取文本内容\r\n            text = html.substring(0, textEnd)\r\n            // console.log(text)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            charts(text)\r\n            // console.log(html)\r\n        }\r\n        // break;\r\n    }\r\n    function parseStartTag() {\r\n        // 解析开始标签\r\n        const start = html.match(startTagOpen) // 1.结果 2.false\r\n        if (start) {\r\n            // console.log(start)\r\n            // 创建语法树 ast\r\n            let match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // 删除 开始标签\r\n            advance(start[0].length)\r\n            // 属性\r\n            // 注意  多个属性需要遍历\r\n            // 注意  结束标签 \">\"\r\n            let attr\r\n            let end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr)  // {}\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n                advance(attr[0].length)\r\n\r\n            }\r\n\r\n\r\n            // 当字符剩下一个'>'符号的时候，需要通过end去处理它\r\n            if (end) {\r\n                // console.log(end)\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n        }\r\n\r\n    }\r\n    function advance(n) {\r\n        // 表示拿到从n开始后面的东西\r\n        html = html.substring(n)\r\n        // console.log(html)\r\n    }\r\n    // console.log(root)\r\n    return root\r\n}","import { parseHTML } from \"./parseAst\"\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // TODO: 一、 将html 变成ast 语法树\r\n    let ast = parseHTML(template)\r\n    console.log(ast)\r\n\r\n    // TODO: 二、 将ast语法树变成render函数 (1) ast 语法树变成字符串 (2) 字符串变成函数\r\n}\r\n\r\n/**\r\n * \r\n */","// 重写数组\r\n// 1. 获取原来的数组方法\r\nlet oldArrayProtoMethods = Array.prototype\r\n\r\n// 2. 继承数组的方法\r\n/**\r\n * 使用Object.create() 方法创建一个新对象，并将这个新对象的原型设置为oldArrayProtoMethods\r\n */\r\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\n// 3.劫持数组的方法\r\nlet methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"splice\"\r\n]\r\n\r\n// 通过遍历methods数组中的每个方法名，将对应的函数重新定义ArrayMethods\r\nmethods.forEach(item => {\r\n    ArrayMethods[item] = function (...args) {\r\n        // console.log('劫持数组')\r\n        // 将方法内部的\"this\"指向当前的数组对象，并传入args作为参数\r\n        /**\r\n         * oldArrayProtoMethods[item]=arr.push(arr) \r\n         * 所以得需要绑定this\r\n         */\r\n        let result = oldArrayProtoMethods[item].apply(this, args)\r\n        // console.log(args)   // [{b:6}]\r\n        // 问题： 数组追加对象的情况 arr arr.push({a:1})\r\n        let inserted\r\n        switch (item) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice': \r\n                inserted = args.splice(2)   // arr.splice(0,1,{b:6})  // 除去前面两种方法，所以传参数2\r\n                break;\r\n            \r\n        }\r\n        // console.log(inserted)\r\n        \r\n        let ob = this.__ob__ \r\n        if(inserted){\r\n            ob.observerArray(inserted) // 对我们添加的对象进行劫持\r\n        }\r\n        return result\r\n    }\r\n})","import { ArrayMethods } from \"./arr\"\r\n\r\nexport function observer(data) {\r\n    // console.log(data)\r\n\r\n    // TODO: (1) 对象的处理 vue2\r\n    // 判断\r\n    if (typeof data != 'object' || data === null) {\r\n        return data\r\n    }\r\n    // 通过一个类进行劫持\r\n    return new Observer(data)\r\n\r\n}\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        // 给 data 定义一个属性\r\n        Object.defineProperty(value, \"__ob__\", {\r\n            enumerable: false,\r\n            value: this\r\n        })\r\n\r\n        // console.log(value)\r\n        // 判断数据是数组还是对象\r\n        if (Array.isArray(value)) {\r\n            // 处理数组\r\n            // 将value的原型指向ArrayMethods\r\n            value.__proto__ = ArrayMethods\r\n            // console.log(value)\r\n            // console.log(value)\r\n            // 如果你是数组对象\r\n            this.observerArray(value) // 数组对象劫持\r\n        } else {\r\n            // 处理对象\r\n            this.walk(value)  // 遍历\r\n        }\r\n\r\n    }\r\n    walk(data) {  // { msg: 'hello' }\r\n        // 原始写法\r\n        // let keys = Object.keys(data)\r\n        // for(let i=0;i<keys.length;i++) {\r\n        //     // 对我们的每个属性进行劫持\r\n        //     let key = keys[i]\r\n        //     let value = data[key]\r\n        //     definedReactive(data,key,value)\r\n        // }\r\n\r\n        // Es6写法\r\n        for (let [key, value] of Object.entries(data)) {\r\n            definedReactive(data, key, value)\r\n        }\r\n    }\r\n\r\n    observerArray(value) {  // [{a:1}]\r\n        for (let i = 0; i < value.length; i++) {\r\n            observer(value[i])\r\n        }\r\n    }\r\n\r\n}\r\n// 对 对象中的属性进行劫持\r\nfunction definedReactive(data, key, value) {\r\n    observer(value) // 深度代理\r\n    Object.defineProperty(data, key, {\r\n        // 获取的时候触发\r\n        get() {\r\n            // console.log('获取的时候触发')\r\n            return value  // 返回值\r\n        },\r\n        set(newValue) {\r\n            // console.log('设置的时候触发')\r\n            if (newValue === value) return value\r\n            observer(newValue)  // 如果用户设置的值是对象\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// vue2 object.defineProperty 缺点：对象中的一个属性  {a:1,b:2}\r\n\r\n// {a:{},list:[]}\r\n\r\n// 总结：1) 对象\r\n// 1、vue2 object.defineProperty 有缺点，只能对对象中的一个属性进行劫持 \r\n// 2、遍历{a:1,b:2,obj:{}}\r\n// 3、递归 get    set\r\n\r\n\r\n// 数组 {list: [1,2,3,4],arr:[{a:1}]}\r\n// 方法函数劫持，劫持数组方法 通过 arr.push()\r\n\r\n","import { observer } from \"./observer/index\"\r\n\r\nexport function initState(vm) {\r\n    let opts = vm.$options\r\n    // console.log(opts)\r\n    // 判断\r\n    if(opts.props){\r\n        initProps()\r\n    }\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n    if(opts.watch){\r\n        initWatch()\r\n    }\r\n    if(opts.computed){\r\n        initComputed()\r\n    }\r\n    if(opts.methods){\r\n        initMethods()\r\n    }\r\n\r\n    // 计算属性\r\n    function initComputed() {}\r\n    // 方法属性\r\n    function initMethods() {}\r\n    // Props属性\r\n    function initProps() {}\r\n    // watch方法\r\n    function initWatch() {}\r\n\r\n\r\n    // data属性  TODO: 对data初始化 \r\n    function initData(vm) {\r\n        // console.log('data初始化',vm) // 1. data可能是对象 2.对象可能是函数\r\n        let data = vm.$options.data\r\n        vm._data = typeof data === \"function\" ? data.call(vm):data // 注意 this指向问题\r\n        data = vm._data  \r\n        // 数据进行劫持\r\n        // 将data 上的所有属性代理到实例上 vm {a:1,b:2}\r\n        \r\n        for(let key in data){\r\n            proxy(vm,\"_data\",key) \r\n        }\r\n        observer(data)\r\n    }\r\n\r\n    function proxy(vm,source,key) {\r\n        Object.defineProperty(vm,key,{\r\n            get() {\r\n                return vm[source][key]\r\n            },\r\n            set(newValue) {\r\n                vm[source][key] = newValue\r\n            }\r\n        })\r\n    }\r\n\r\n    // data{}  (1) 对象 (2) 数组 {a:{b:1},list:[1,2,3],arr:[{}]}\r\n\r\n\r\n\r\n    \r\n}","import { compileToFunction } from \"./compile/index\"\r\nimport { initState } from \"./initState\"\r\n\r\n// 为 Vue.js 添加初始化 mixin\r\nexport function initMixin(Vue) {\r\n    // 将 _init 方法添加到 Vue.prototype 中\r\n    Vue.prototype._init = function (options) {\r\n        // console.log(options)\r\n\r\n        // 将当前实例赋值给 vm\r\n        let vm = this\r\n        \r\n        // 将传入的 options 对象赋值给实例的 $options 属性\r\n        vm.$options = options\r\n        \r\n        // 初始化实例状态\r\n        initState(vm)\r\n        console.log(vm)\r\n\r\n\r\n        // 渲染模版  el\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // 创建 $mount方法\r\n    Vue.prototype.$mount = function (el) {\r\n        console.log(el)\r\n        // el template render\r\n        let vm = this\r\n        el = document.querySelector(el)  // 获取元素\r\n        let options = vm.$options\r\n        if(!options.render) {  // 没有render\r\n            let template = options.template\r\n            if(!template && el) {\r\n                // 获取html\r\n                el = el.outerHTML\r\n                console.log(el) \r\n                \r\n                // 变成ast语法树\r\n                let ast = compileToFunction(el)\r\n\r\n                // render()\r\n            }  \r\n        }\r\n    }\r\n}\r\n\r\n// ast语法树 vnode \r\n /**\r\n  * {\r\n  * tag: 'div',\r\n  * attrs: [{id:\"app\"}],\r\n  * children:[tag:null,text:hello,{tag:'div'}]\r\n  * }\r\n  */\r\n\r\n\r\n\r\n\r\n\r\n\r\n","import {initMixin} from './init'\r\n\r\nfunction Vue(options) {\r\n    // console.log(options)\r\n    // 初始化\r\n    this._init(options)\r\n\r\n}\r\n\r\ninitMixin(Vue)\r\n\r\nexport default Vue"],"names":["ncname","qnameCapture","concat","startTagOpen","RegExp","endTag","attribute","startTagClose","createASTElement","tag","attrs","children","type","parent","root","createParent","stack","start","element","push","charts","text","replace","end","pop","length","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","match","advance","substring","attr","name","value","n","compileToFunction","template","ast","console","log","oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","methods","forEach","item","_len","arguments","args","_key","result","apply","inserted","splice","ob","__ob__","observerArray","observer","data","_typeof","Observer","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","key","_i","_Object$entries","entries","_Object$entries$_i","_slicedToArray","definedReactive","i","get","set","newValue","initState","vm","opts","$options","props","initData","watch","computed","_data","call","proxy","source","initMixin","Vue","_init","options","el","$mount","document","querySelector","render","outerHTML"],"mappings":"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"}