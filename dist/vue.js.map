{"version":3,"file":"vue.js","sources":["../src/compile/generate.js","../src/compile/parseAst.js","../src/compile/index.js","../src/observer/arr.js","../src/observer/index.js","../src/initState.js","../src/vnode/patch.js","../src/lifecycle.js","../src/init.js","../src/vnode/index.js","../src/index.js"],"sourcesContent":["\r\n/**\r\n * <div id=\"app\"> hello {{ msg }} <h></h> </div>\r\n * \r\n * render(){  _c 解析标签\r\n *    return _c('div',{id:app},_v('hello'+_s()),_c)\r\n * }\r\n*/\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;   // {{ }}\r\n// 处理属性\r\nfunction genProps(attrs) {\r\n    let str = '';\r\n    // attrs 是对象的形式 [{...},{...},{...}]\r\n    for (let i = 0; i < attrs.length; i++) {\r\n        let attr = attrs[i] // 拿到每一个对象\r\n        // 判断是否为行内 内联样式   {id:app,style:{color:red,fo}}  {value: 'color: red;font-size: 20px;'}\r\n        if (attr.name === 'style') {\r\n            let obj = {}\r\n            attr.value.split(';').forEach(item => {\r\n                let [key, val] = item.split(':')\r\n                obj[key] = val\r\n            });\r\n            attr.value = obj\r\n        }\r\n        // 拼接\r\n        str += `${attr.name}:${JSON.stringify(attr.value)},`\r\n    }\r\n    return `{${str.slice(0, -1)}}`\r\n}\r\n\r\n// 处理子节点(1)\r\nfunction genChildren(el) {\r\n    let children = el.children  // 有无子集\r\n    if (children) {\r\n        // 处理数组，将对象处理成字符串\r\n        return children.map(child => gen(child)).join(',')   \r\n    }\r\n}\r\n//  具体处理子节点\r\nfunction gen(node) { // 1：元素   3：文本\r\n    if (node.type === 1) { // 如果是元素或标签，继续递归\r\n        return generate(node)\r\n    } else { // 文本    (1) 只是文本 hello   (2)   差值表达式\r\n        let text = node.text  // 获取文本\r\n\r\n        // 解析不带 {{}} 表达式的\r\n        if (!defaultTagRE.test(text)) {\r\n            return `_v(${JSON.stringify(text)})`\r\n        }\r\n        // 带有 {{ }} 差值表达式   hello {{name}} , {{msg}} 你好\r\n        let tokens = []\r\n        /**\r\n         *  TODO: 下方使用了while循环，循环中使用了正则表达式匹配差值表达式，由于正则符号带有全局标志'g'，因此每次调用exec\r\n         *        会从上一次匹配结束的位置继续搜索下一个匹配的位置，将它重置为0，确保从文本的开头开始搜索下一个匹配的位置\r\n         */\r\n        let lastindex = defaultTagRE.lastIndex = 0 // 重置lastIndex 这样可以重复使用正则判断\r\n        let match\r\n        while (match = defaultTagRE.exec(text)) {  //使用exec 执行匹配操作，并返回一个数组；每次调用都从上一次匹配结束的位置继续搜索\r\n            // console.log(match)\r\n            let index = match.index\r\n            if (index > lastindex) {  \r\n                // 添加除了差值运算符之前的内容\r\n                tokens.push(JSON.stringify(text.slice(lastindex, index))) \r\n            }\r\n            // 解决 {{}}\r\n            tokens.push(`_s(${match[1].trim()})`)\r\n            lastindex = index + match[0].length\r\n        }\r\n        // 如果差值表达式的结束位置小于整个文本长度，说明后面还有内容，就后面的内容也处理掉\r\n        if (lastindex < text.length) {\r\n            // slice表示从lastindex开始，一直截取到字符串的末尾\r\n            tokens.push(JSON.stringify(text.slice(lastindex)))\r\n        }\r\n        // 最终返回结果\r\n        return `_v(${tokens.join('+')})`\r\n\r\n    }\r\n}\r\n\r\n// 处理标签部分\r\nexport function generate(el) {  // ast\r\n    // console.log(el)\r\n    // 注意属性 {id:app,style:{color:red,fo}}\r\n    let children = genChildren(el)\r\n    // console.log(children)\r\n    let code = `_c('${el.tag}',${el.attrs.length ? `${genProps(el.attrs)}` : 'undefined'} ,${children ? `${children}` : ''})`\r\n    console.log(code)\r\n    // 这里一定要返回，否则上面调用的时候不会处理\r\n    return code\r\n    \r\n}","// <div id=\"app\"> hello {{ msg }} <h></h></div>\r\n// ast语法树 vnode \r\n/**\r\n * {\r\n * tag: 'div',\r\n * attrs: [{id:\"app\"}],\r\n * children:[tag:null,text:hello,{tag:'div'}]\r\n * }\r\n */\r\n\r\n// 标签名 a-aaa\r\nconst ncname = `[a-zA-Z_][\\\\-\\\\.0-9_a-zA-Z]*`;\r\n// 命名空间标签 aa:aa-xxx\r\nconst qnameCapture = `((?:${ncname}\\\\:)?${ncname})`; // <span:xx> \r\n// 开始标签-捕获标签名\r\nconst startTagOpen = new RegExp(`^<${qnameCapture}`);\r\n// 结束标签-匹配标签结尾的 </div>\r\nconst endTag = new RegExp(`^<\\\\/${qnameCapture}[^>]*>`);\r\n// 匹配属性\r\nconst attribute = /^\\s*([^\\s\"'<>\\/=]+)(?:\\s*(=)\\s*(?:\"([^\"]*)\"+|'([^']*)'+|([^\\s\"'=<>`]+)))?/; {/* <div id=\"app\"></div> */ }\r\n// 匹配标签结束的 >\r\nconst startTagClose = /^\\s*(\\/?)>/;\r\n// 匹配 {{ }} 表达式\r\nconst defaultTagRE = /\\{\\{((?:.|\\r?\\n)+?)\\}\\}/g;\r\n\r\n// 遍历\r\n// 创建一个ast语法树\r\n// <div id=\"app\"> hello {{ msg }} <h></h></div>\r\nfunction createASTElement(tag,attrs){\r\n    return {\r\n        tag,    // 原树  是div或者span或等等\r\n        attrs,  // 属性\r\n        children:[], // 子节点\r\n        type:1,      // 元素类型\r\n        parent: null\r\n    }\r\n}\r\n\r\nlet root; // 根元素\r\nlet createParent // 当前元素的父亲\r\n// 数据结构  栈\r\nlet stack = []  // [div,h]\r\n\r\nfunction start(tag, attrs) {  // 开始标签\r\n    let element = createASTElement(tag,attrs)\r\n    if(!root){\r\n        root = element\r\n    }\r\n    createParent = element\r\n    stack.push(element)\r\n}\r\n\r\nfunction charts(text) { // 获取文本\r\n    // console.log(text, '文本内容部分')\r\n    // 去掉空格\r\n    text = text.replace(/a/g,'')  // /a 表示空格 /g表示全部 /a/g表示全部空格 \r\n    // 去掉空格 写法II\r\n    // text = text.split(' ').join('')\r\n    if(text) {\r\n        createParent.children.push({\r\n            type:3,\r\n            text\r\n\r\n\r\n        })\r\n    }\r\n\r\n}\r\nfunction end(tag) { // 结束的标签\r\n    let element = stack.pop()  // 拿到栈中最后一个元素\r\n    createParent = stack[stack.length-1]\r\n    if(createParent){ // 元素闭合\r\n        element.parent = createParent.tag\r\n        createParent.children.push(element)\r\n    }\r\n}\r\n\r\n// 创建一个 ast 对象\r\nexport function parseHTML(html) {\r\n    // <div id=\"app\"> hello {{ msg }} <h></h></div>  // 开始标签，文本，结束标签\r\n    while (html) {  // html 为空结束\r\n        // 判断标签 <>\r\n        let textEnd = html.indexOf('<') // 如果为0的话 证明第一个是<，说明是一个标签\r\n        if (textEnd === 0) { // 标签\r\n            // (1) 开始标签\r\n            const startTagMatch = parseStartTag() // 开始标签的内容 {}\r\n            if (startTagMatch) {\r\n                start(startTagMatch.tagName, startTagMatch.attrs)\r\n                continue\r\n            }\r\n            // (2)结束标签\r\n            let endTagMatch = html.match(endTag)\r\n            // console.log(endTagMatch)\r\n            if (endTagMatch) {\r\n                advance(endTagMatch[0].length)\r\n                end(endTagMatch[1])\r\n                continue\r\n            }\r\n        }\r\n\r\n        // 文本处理\r\n        let text\r\n        if (textEnd > 0) {\r\n            // console.log(textEnd)\r\n            // 获取文本内容\r\n            text = html.substring(0, textEnd)\r\n            // console.log(text)\r\n        }\r\n        if (text) {\r\n            advance(text.length)\r\n            charts(text)\r\n            // console.log(html)\r\n        }\r\n        // break;\r\n    }\r\n    function parseStartTag() {\r\n        // 解析开始标签\r\n        const start = html.match(startTagOpen) // 1.结果 2.false\r\n        if (start) {\r\n            // console.log(start)\r\n            // 创建语法树 ast\r\n            let match = {\r\n                tagName: start[1],\r\n                attrs: []\r\n            }\r\n            // 删除 开始标签\r\n            advance(start[0].length)\r\n            // 属性\r\n            // 注意  多个属性需要遍历\r\n            // 注意  结束标签 \">\"\r\n            let attr\r\n            let end\r\n            while (!(end = html.match(startTagClose)) && (attr = html.match(attribute))) {\r\n                // console.log(attr)  // {}\r\n                match.attrs.push({ name: attr[1], value: attr[3] || attr[4] || attr[5] })\r\n                advance(attr[0].length)\r\n\r\n            }\r\n\r\n\r\n            // 当字符剩下一个'>'符号的时候，需要通过end去处理它\r\n            if (end) {\r\n                // console.log(end)\r\n                advance(end[0].length)\r\n                return match\r\n            }\r\n        }\r\n\r\n    }\r\n    function advance(n) {\r\n        // 表示拿到从n开始后面的东西\r\n        html = html.substring(n)\r\n        // console.log(html)\r\n    }\r\n    // console.log(root)\r\n    return root\r\n}","import { generate } from \"./generate\"\r\nimport { parseHTML } from \"./parseAst\"\r\n\r\nexport function compileToFunction(template) {\r\n\r\n    // TODO: 一、 将html 变成ast 语法树\r\n    let ast = parseHTML(template)\r\n    // console.log(ast)\r\n\r\n    // TODO: 二、 将ast语法树变成render函数 (1) ast 语法树变成字符串 (2) 字符串变成函数\r\n    let code = generate(ast)    // _c_v_s   解析元素：_c  解析文本: _v 解析变量: _s\r\n \r\n    // TODO: 三、 将render 字符串变成函数\r\n    /**\r\n     * with 语句是js中的一个特殊语句，可以将一个对象作为作用域，使得对象内部的变量可以直接被调用，而无需使用对象本身作为前缀\r\n     * 可以直接使用 a  而不用Obj.a\r\n     */\r\n    let render = new Function(`with(this){return ${code}}`)\r\n    return render\r\n}\r\n","// 重写数组\r\n// 1. 获取原来的数组方法\r\nlet oldArrayProtoMethods = Array.prototype\r\n\r\n// 2. 继承数组的方法\r\n/**\r\n * 使用Object.create() 方法创建一个新对象，并将这个新对象的原型设置为oldArrayProtoMethods\r\n */\r\nexport let ArrayMethods = Object.create(oldArrayProtoMethods)\r\n\r\n// 3.劫持数组的方法\r\nlet methods = [\r\n    \"push\",\r\n    \"pop\",\r\n    \"unshift\",\r\n    \"shift\",\r\n    \"splice\"\r\n]\r\n\r\n// 通过遍历methods数组中的每个方法名，将对应的函数重新定义ArrayMethods\r\nmethods.forEach(item => {\r\n    ArrayMethods[item] = function (...args) {\r\n        // console.log('劫持数组')\r\n        // 将方法内部的\"this\"指向当前的数组对象，并传入args作为参数\r\n        /**\r\n         * oldArrayProtoMethods[item]=arr.push(arr) \r\n         * 所以得需要绑定this\r\n         */\r\n        let result = oldArrayProtoMethods[item].apply(this, args)\r\n        // console.log(args)   // [{b:6}]\r\n        // 问题： 数组追加对象的情况 arr arr.push({a:1})\r\n        let inserted\r\n        switch (item) {\r\n            case 'push':\r\n            case 'unshift':\r\n                inserted = args\r\n                break;\r\n            case 'splice': \r\n                inserted = args.splice(2)   // arr.splice(0,1,{b:6})  // 除去前面两种方法，所以传参数2\r\n                break;\r\n            \r\n        }\r\n        // console.log(inserted)\r\n        \r\n        let ob = this.__ob__ \r\n        if(inserted){\r\n            ob.observerArray(inserted) // 对我们添加的对象进行劫持\r\n        }\r\n        return result\r\n    }\r\n})","import { ArrayMethods } from \"./arr\"\r\n\r\nexport function observer(data) {\r\n    // console.log(data)\r\n\r\n    // TODO: (1) 对象的处理 vue2\r\n    // 判断\r\n    if (typeof data != 'object' || data === null) {\r\n        return data\r\n    }\r\n    // 通过一个类进行劫持\r\n    return new Observer(data)\r\n\r\n}\r\n\r\nclass Observer {\r\n    constructor(value) {\r\n        // 给 data 定义一个属性\r\n        Object.defineProperty(value, \"__ob__\", {\r\n            enumerable: false,\r\n            value: this\r\n        })\r\n\r\n        // console.log(value)\r\n        // 判断数据是数组还是对象\r\n        if (Array.isArray(value)) {\r\n            // 处理数组\r\n            // 将value的原型指向ArrayMethods\r\n            value.__proto__ = ArrayMethods\r\n            // console.log(value)\r\n            // console.log(value)\r\n            // 如果你是数组对象\r\n            this.observerArray(value) // 数组对象劫持\r\n        } else {\r\n            // 处理对象\r\n            this.walk(value)  // 遍历\r\n        }\r\n\r\n    }\r\n    walk(data) {  // { msg: 'hello' }\r\n        // 原始写法\r\n        // let keys = Object.keys(data)\r\n        // for(let i=0;i<keys.length;i++) {\r\n        //     // 对我们的每个属性进行劫持\r\n        //     let key = keys[i]\r\n        //     let value = data[key]\r\n        //     definedReactive(data,key,value)\r\n        // }\r\n\r\n        // Es6写法\r\n        for (let [key, value] of Object.entries(data)) {\r\n            definedReactive(data, key, value)\r\n        }\r\n    }\r\n\r\n    observerArray(value) {  // [{a:1}]\r\n        for (let i = 0; i < value.length; i++) {\r\n            observer(value[i])\r\n        }\r\n    }\r\n\r\n}\r\n// 对 对象中的属性进行劫持\r\nfunction definedReactive(data, key, value) {\r\n    observer(value) // 深度代理\r\n    Object.defineProperty(data, key, {\r\n        // 获取的时候触发\r\n        get() {\r\n            // console.log('获取的时候触发')\r\n            return value  // 返回值\r\n        },\r\n        set(newValue) {\r\n            // console.log('设置的时候触发')\r\n            if (newValue === value) return value\r\n            observer(newValue)  // 如果用户设置的值是对象\r\n            value = newValue\r\n        }\r\n    })\r\n}\r\n\r\n\r\n// vue2 object.defineProperty 缺点：对象中的一个属性  {a:1,b:2}\r\n\r\n// {a:{},list:[]}\r\n\r\n// 总结：1) 对象\r\n// 1、vue2 object.defineProperty 有缺点，只能对对象中的一个属性进行劫持 \r\n// 2、遍历{a:1,b:2,obj:{}}\r\n// 3、递归 get    set\r\n\r\n\r\n// 数组 {list: [1,2,3,4],arr:[{a:1}]}\r\n// 方法函数劫持，劫持数组方法 通过 arr.push()\r\n\r\n","import { observer } from \"./observer/index\"\r\n\r\nexport function initState(vm) {\r\n    let opts = vm.$options\r\n    // console.log(opts)\r\n    // 判断\r\n    if(opts.props){\r\n        initProps()\r\n    }\r\n    if(opts.data){\r\n        initData(vm)\r\n    }\r\n    if(opts.watch){\r\n        initWatch()\r\n    }\r\n    if(opts.computed){\r\n        initComputed()\r\n    }\r\n    if(opts.methods){\r\n        initMethods()\r\n    }\r\n\r\n    // 计算属性\r\n    function initComputed() {}\r\n    // 方法属性\r\n    function initMethods() {}\r\n    // Props属性\r\n    function initProps() {}\r\n    // watch方法\r\n    function initWatch() {}\r\n\r\n\r\n    // data属性  TODO: 对data初始化 \r\n    function initData(vm) {\r\n        // console.log('data初始化',vm) // 1. data可能是对象 2.对象可能是函数\r\n        let data = vm.$options.data\r\n        vm._data = typeof data === \"function\" ? data.call(vm):data // 注意 this指向问题\r\n        data = vm._data  \r\n        // 数据进行劫持\r\n        // 将data 上的所有属性代理到实例上 vm {a:1,b:2}\r\n        \r\n        for(let key in data){\r\n            proxy(vm,\"_data\",key) \r\n        }\r\n        observer(data)\r\n    }\r\n\r\n    function proxy(vm,source,key) {\r\n        Object.defineProperty(vm,key,{\r\n            get() {\r\n                return vm[source][key]\r\n            },\r\n            set(newValue) {\r\n                vm[source][key] = newValue\r\n            }\r\n        })\r\n    }\r\n\r\n    // data{}  (1) 对象 (2) 数组 {a:{b:1},list:[1,2,3],arr:[{}]}\r\n\r\n\r\n\r\n    \r\n}","export function patch(oldVnode, vnode) {\r\n    console.log(oldVnode, vnode)\r\n    // vnode -> 真实的 dom\r\n    // (1) 创建新DOM\r\n    let el = createEl(vnode)\r\n    // console.log(el)\r\n    // (2) 替换dom    \r\n        /**\r\n         * 1) 获取父节点\r\n         * 2) 插入\r\n         * 3) 删除\r\n        */\r\n    \r\n    // 1.获取父节点\r\n    let parentEl = oldVnode.parentNode   // 父节点是 body\r\n    // 将el 插入到原来的元素 oldVnode的下一个兄弟元素之前，相当于替换了老的oldVnode\r\n    parentEl.insertBefore(el,oldVnode.nextsibling)\r\n    // 将原来的老元素删掉\r\n    parentEl.removeChild(oldVnode)\r\n    return el\r\n    // console.log(parentEl)\r\n}\r\n\r\n\r\n// 创建dom\r\nfunction createEl(vnode) { // vnode: {tag,text,data,children}\r\n    let { tag, children, key, data, text } = vnode\r\n\r\n    // TODO: 判断是标签的情况\r\n    if (typeof tag === 'string') { // 标签\r\n        vnode.el = document.createElement(tag)  // 创建元素div\r\n        // children []\r\n        if (children.length > 0) { // 有children 还需要创建元素  [{}]\r\n            children.forEach(child => {\r\n                // 需要递归，判断是文本还是标签\r\n                vnode.el.appendChild(createEl(child))\r\n            });\r\n\r\n        }\r\n    }else{ // TODO: 判断是文本的情况\r\n        vnode.el = document.createTextNode(text)\r\n    }\r\n    return vnode.el\r\n    \r\n\r\n}\r\n\r\n\r\n\r\n// TODO: 面试题：Vue的渲染流程\r\n\r\n/**\r\n * 数据初始化 -> 对模板进行编译 -> 变成render函数(div变ast语法树 => render字符串 => render函数) \r\n *           -> 通过render函数变成vnode -> vnode变成真实dom -> 放到页面\r\n */\r\n\r\n","import { patch } from \"./vnode/patch\"\r\n\r\n// 组件挂载，进行渲染\r\nexport function mountCoponent(vm,el){\r\n    // (1)vm._render 将render函数 变成虚拟DOM (2)vm._updata 将虚拟DOM 变成真实DOM\r\n    vm._updata(vm._render()) \r\n}\r\n\r\n// 生命周期初始化\r\nexport function lifecycleMixin(Vue) {\r\n    // _updata 将虚拟DOM变成真实DOM\r\n    Vue.prototype._updata = function(vnode){\r\n        // console.log(vnode)\r\n        let vm = this\r\n        // console.log(vm.$el)\r\n        // 此处传入两个参数  (1) 旧的dom (2) vnode\r\n        vm.$el =  patch(vm.$el,vnode)\r\n    }\r\n    \r\n}\r\n\r\n// （1）render() 函数 -> vnode -> 真实dom ","import { compileToFunction } from \"./compile/index\"\r\nimport { initState } from \"./initState\"\r\nimport { mountCoponent } from \"./lifecycle\"\r\n\r\n// 为 Vue.js 添加初始化 mixin\r\nexport function initMixin(Vue) {\r\n    // 将 _init 方法添加到 Vue.prototype 中\r\n    Vue.prototype._init = function (options) {\r\n        // console.log(options)\r\n\r\n        // 将当前实例赋值给 vm\r\n        let vm = this\r\n        \r\n        // 将传入的 options 对象赋值给实例的 $options 属性\r\n        vm.$options = options\r\n        \r\n        // 初始化实例状态\r\n        initState(vm)\r\n        console.log(vm)\r\n\r\n        // 渲染模版  el\r\n        if (vm.$options.el) {\r\n            vm.$mount(vm.$options.el)\r\n\r\n        }\r\n\r\n    }\r\n\r\n    // 创建 $mount方法\r\n    Vue.prototype.$mount = function (el) {\r\n        console.log(el)\r\n        // el template render\r\n        let vm = this\r\n        el = document.querySelector(el)  // 获取元素\r\n        vm.$el = el\r\n        let options = vm.$options\r\n        if(!options.render) {  // 没有render\r\n            let template = options.template\r\n            if(!template && el) {\r\n                // 获取html\r\n                el = el.outerHTML\r\n                console.log(el) \r\n                \r\n                // 变成ast语法树\r\n                let render = compileToFunction(el)\r\n                console.log(render)\r\n                // (1) 将render 函数变成vnode  (2) 将vnode 变成真实的DOM 放到页面上\r\n                options.render = render\r\n            }  \r\n        }\r\n        // 挂载组件 进行渲染\r\n        mountCoponent(vm,el)  // vm._updata  将虚拟DOM 变成真实DOM  \r\n                              // vm._render  将render函数 变成虚拟DOM\r\n    }\r\n}\r\n\r\n// ast语法树 vnode \r\n /**\r\n  * {\r\n  * tag: 'div',\r\n  * attrs: [{id:\"app\"}],\r\n  * children:[tag:null,text:hello,{tag:'div'}]\r\n  * }\r\n  */\r\n\r\n\r\n\r\n\r\n\r\n\r\n","export function renderMixin(Vue) {\r\n    // 处理标签方法\r\n    Vue.prototype._c = function( ) { \r\n        // 创建标签\r\n        return createElement(...arguments)\r\n    }\r\n    // 处理文本\r\n    Vue.prototype._v = function(text) { \r\n        return createText(text)\r\n    }\r\n    // 处理变量\r\n    Vue.prototype._s = function(val) { \r\n        return val === null? \"\":(typeof val ==='object')?JSON.stringify(val):val\r\n    }\r\n    \r\n    Vue.prototype._render = function() { // render函数变成 vnode\r\n        let vm = this   // 拿到实例对象\r\n        let render = vm.$options.render    // 参考init.js中 options.render = render 变成ast语法树部分\r\n        let vnode = render.call(this)\r\n        // console.log(vnode)\r\n        return vnode\r\n    }\r\n\r\n}\r\n\r\n// 创建元素\r\nfunction createElement(tag,data={},...children){\r\n    return vnode(tag,data,data.key,children)\r\n}\r\n\r\n// 创建文本\r\nfunction createText(text) {\r\n    return vnode(undefined,undefined,undefined,undefined,text)\r\n}\r\n\r\n\r\n// 创建虚拟DOM  vnode\r\nfunction vnode(tag,data,key,children,text) {\r\n    return {\r\n        tag,\r\n        data,\r\n        key,\r\n        children,\r\n        text\r\n\r\n    }\r\n}\r\n\r\n// vnode   描述节点\r\n\r\n/**\r\n * {\r\n * tag,\r\n * text,\r\n * children\r\n * \r\n * }\r\n */\r\n\r\n\r\n","import {initMixin} from './init'\r\nimport { lifecycleMixin } from './lifecycle'\r\nimport { renderMixin } from './vnode/index'\r\n\r\n\r\n\r\nfunction Vue(options) {\r\n    // console.log(options)\r\n    // 初始化\r\n    this._init(options)\r\n\r\n}\r\n\r\n// 状态初始化\r\ninitMixin(Vue)\r\n\r\n// 生命周期初始化\r\nlifecycleMixin(Vue) // 添加生命周期\r\n\r\n// 渲染文件\r\nrenderMixin(Vue)  // 添加_render方法\r\n\r\n\r\nexport default Vue"],"names":["defaultTagRE","genProps","attrs","str","_loop","attr","i","name","obj","value","split","forEach","item","_item$split","_item$split2","_slicedToArray","key","val","concat","JSON","stringify","length","slice","genChildren","el","children","map","child","gen","join","node","type","generate","text","test","tokens","lastindex","lastIndex","match","exec","index","push","trim","code","tag","console","log","ncname","qnameCapture","startTagOpen","RegExp","endTag","attribute","startTagClose","createASTElement","parent","root","createParent","stack","start","element","charts","replace","end","pop","parseHTML","html","textEnd","indexOf","startTagMatch","parseStartTag","tagName","endTagMatch","advance","substring","n","compileToFunction","template","ast","render","Function","oldArrayProtoMethods","Array","prototype","ArrayMethods","Object","create","methods","_len","arguments","args","_key","result","apply","inserted","splice","ob","__ob__","observerArray","observer","data","_typeof","Observer","_classCallCheck","defineProperty","enumerable","isArray","__proto__","walk","_createClass","_i","_Object$entries","entries","_Object$entries$_i","definedReactive","get","set","newValue","initState","vm","opts","$options","props","initData","watch","computed","_data","call","proxy","source","patch","oldVnode","vnode","createEl","parentEl","parentNode","insertBefore","nextsibling","removeChild","document","createElement","appendChild","createTextNode","mountCoponent","_updata","_render","lifecycleMixin","Vue","$el","initMixin","_init","options","$mount","querySelector","outerHTML","renderMixin","_c","_v","createText","_s","undefined"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA,IAAMA,YAAY,GAAG,0BAA0B,CAAC;EAChD;EACA,SAASC,QAAQA,CAACC,KAAK,EAAE;IACrB,IAAIC,GAAG,GAAG,EAAE,CAAA;EACZ;IAAA,IAAAC,KAAA,GAAAA,SAAAA,KAAAA,GACuC;EACnC,IAAA,IAAIC,IAAI,GAAGH,KAAK,CAACI,CAAC,CAAC,CAAC;EACpB;EACA,IAAA,IAAID,IAAI,CAACE,IAAI,KAAK,OAAO,EAAE;QACvB,IAAIC,GAAG,GAAG,EAAE,CAAA;EACZH,MAAAA,IAAI,CAACI,KAAK,CAACC,KAAK,CAAC,GAAG,CAAC,CAACC,OAAO,CAAC,UAAAC,IAAI,EAAI;EAClC,QAAA,IAAAC,WAAA,GAAiBD,IAAI,CAACF,KAAK,CAAC,GAAG,CAAC;YAAAI,YAAA,GAAAC,cAAA,CAAAF,WAAA,EAAA,CAAA,CAAA;EAA3BG,UAAAA,GAAG,GAAAF,YAAA,CAAA,CAAA,CAAA;EAAEG,UAAAA,GAAG,GAAAH,YAAA,CAAA,CAAA,CAAA,CAAA;EACbN,QAAAA,GAAG,CAACQ,GAAG,CAAC,GAAGC,GAAG,CAAA;EAClB,OAAC,CAAC,CAAA;QACFZ,IAAI,CAACI,KAAK,GAAGD,GAAG,CAAA;EACpB,KAAA;EACA;EACAL,IAAAA,GAAG,OAAAe,MAAA,CAAOb,IAAI,CAACE,IAAI,EAAAW,GAAAA,CAAAA,CAAAA,MAAA,CAAIC,IAAI,CAACC,SAAS,CAACf,IAAI,CAACI,KAAK,CAAC,EAAG,GAAA,CAAA,CAAA;KACvD,CAAA;EAbD,EAAA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGJ,KAAK,CAACmB,MAAM,EAAEf,CAAC,EAAE,EAAA;MAAAF,KAAA,EAAA,CAAA;EAAA,GAAA;IAcrC,OAAAc,GAAAA,CAAAA,MAAA,CAAWf,GAAG,CAACmB,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,EAAA,GAAA,CAAA,CAAA;EAC/B,CAAA;;EAEA;EACA,SAASC,WAAWA,CAACC,EAAE,EAAE;EACrB,EAAA,IAAIC,QAAQ,GAAGD,EAAE,CAACC,QAAQ,CAAE;EAC5B,EAAA,IAAIA,QAAQ,EAAE;EACV;EACA,IAAA,OAAOA,QAAQ,CAACC,GAAG,CAAC,UAAAC,KAAK,EAAA;QAAA,OAAIC,GAAG,CAACD,KAAK,CAAC,CAAA;EAAA,KAAA,CAAC,CAACE,IAAI,CAAC,GAAG,CAAC,CAAA;EACtD,GAAA;EACJ,CAAA;EACA;EACA,SAASD,GAAGA,CAACE,IAAI,EAAE;EAAE;EACjB,EAAA,IAAIA,IAAI,CAACC,IAAI,KAAK,CAAC,EAAE;EAAE;MACnB,OAAOC,QAAQ,CAACF,IAAI,CAAC,CAAA;EACzB,GAAC,MAAM;EAAE;EACL,IAAA,IAAIG,IAAI,GAAGH,IAAI,CAACG,IAAI,CAAE;;EAEtB;EACA,IAAA,IAAI,CAACjC,YAAY,CAACkC,IAAI,CAACD,IAAI,CAAC,EAAE;EAC1B,MAAA,OAAA,KAAA,CAAAf,MAAA,CAAaC,IAAI,CAACC,SAAS,CAACa,IAAI,CAAC,EAAA,GAAA,CAAA,CAAA;EACrC,KAAA;EACA;MACA,IAAIE,MAAM,GAAG,EAAE,CAAA;EACf;EACR;EACA;EACA;EACQ,IAAA,IAAIC,SAAS,GAAGpC,YAAY,CAACqC,SAAS,GAAG,CAAC,CAAC;EAC3C,IAAA,IAAIC,KAAK,CAAA;MACT,OAAOA,KAAK,GAAGtC,YAAY,CAACuC,IAAI,CAACN,IAAI,CAAC,EAAE;EAAG;EACvC;EACA,MAAA,IAAIO,KAAK,GAAGF,KAAK,CAACE,KAAK,CAAA;QACvB,IAAIA,KAAK,GAAGJ,SAAS,EAAE;EACnB;EACAD,QAAAA,MAAM,CAACM,IAAI,CAACtB,IAAI,CAACC,SAAS,CAACa,IAAI,CAACX,KAAK,CAACc,SAAS,EAAEI,KAAK,CAAC,CAAC,CAAC,CAAA;EAC7D,OAAA;EACA;EACAL,MAAAA,MAAM,CAACM,IAAI,CAAAvB,KAAAA,CAAAA,MAAA,CAAOoB,KAAK,CAAC,CAAC,CAAC,CAACI,IAAI,EAAE,EAAI,GAAA,CAAA,CAAA,CAAA;QACrCN,SAAS,GAAGI,KAAK,GAAGF,KAAK,CAAC,CAAC,CAAC,CAACjB,MAAM,CAAA;EACvC,KAAA;EACA;EACA,IAAA,IAAIe,SAAS,GAAGH,IAAI,CAACZ,MAAM,EAAE;EACzB;EACAc,MAAAA,MAAM,CAACM,IAAI,CAACtB,IAAI,CAACC,SAAS,CAACa,IAAI,CAACX,KAAK,CAACc,SAAS,CAAC,CAAC,CAAC,CAAA;EACtD,KAAA;EACA;EACA,IAAA,OAAA,KAAA,CAAAlB,MAAA,CAAaiB,MAAM,CAACN,IAAI,CAAC,GAAG,CAAC,EAAA,GAAA,CAAA,CAAA;EAEjC,GAAA;EACJ,CAAA;;EAEA;EACO,SAASG,QAAQA,CAACR,EAAE,EAAE;EAAG;EAC5B;EACA;EACA,EAAA,IAAIC,QAAQ,GAAGF,WAAW,CAACC,EAAE,CAAC,CAAA;EAC9B;EACA,EAAA,IAAImB,IAAI,GAAAzB,MAAAA,CAAAA,MAAA,CAAUM,EAAE,CAACoB,GAAG,EAAA,IAAA,CAAA,CAAA1B,MAAA,CAAKM,EAAE,CAACtB,KAAK,CAACmB,MAAM,MAAAH,MAAA,CAAMjB,QAAQ,CAACuB,EAAE,CAACtB,KAAK,CAAC,CAAA,GAAK,WAAW,EAAAgB,IAAAA,CAAAA,CAAAA,MAAA,CAAKO,QAAQ,MAAAP,MAAA,CAAMO,QAAQ,CAAA,GAAK,EAAE,EAAG,GAAA,CAAA,CAAA;EACzHoB,EAAAA,OAAO,CAACC,GAAG,CAACH,IAAI,CAAC,CAAA;EACjB;EACA,EAAA,OAAOA,IAAI,CAAA;EAEf;;EC1FA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,IAAMI,MAAM,GAAiC,8BAAA,CAAA;EAC7C;EACA,IAAMC,YAAY,GAAA9B,MAAAA,CAAAA,MAAA,CAAU6B,MAAM,EAAA7B,OAAAA,CAAAA,CAAAA,MAAA,CAAQ6B,MAAM,EAAG,GAAA,CAAA,CAAC;EACpD;EACA,IAAME,YAAY,GAAG,IAAIC,MAAM,MAAAhC,MAAA,CAAM8B,YAAY,CAAG,CAAA,CAAA;EACpD;EACA,IAAMG,MAAM,GAAG,IAAID,MAAM,SAAAhC,MAAA,CAAS8B,YAAY,EAAS,QAAA,CAAA,CAAA,CAAA;EACvD;EACA,IAAMI,SAAS,GAAG,2EAA2E,CAAA;EAC7F;EACA,IAAMC,aAAa,GAAG,YAAY,CAAA;;EAIlC;EACA;EACA;EACA,SAASC,gBAAgBA,CAACV,GAAG,EAAC1C,KAAK,EAAC;IAChC,OAAO;EACH0C,IAAAA,GAAG,EAAHA,GAAG;EAAK;EACR1C,IAAAA,KAAK,EAALA,KAAK;EAAG;EACRuB,IAAAA,QAAQ,EAAC,EAAE;EAAE;EACbM,IAAAA,IAAI,EAAC,CAAC;EAAO;EACbwB,IAAAA,MAAM,EAAE,IAAA;KACX,CAAA;EACL,CAAA;EAEA,IAAIC,IAAI,CAAC;EACT,IAAIC,YAAY,CAAC;EACjB;EACA,IAAIC,KAAK,GAAG,EAAE,CAAE;;EAEhB,SAASC,KAAKA,CAACf,GAAG,EAAE1C,KAAK,EAAE;EAAG;EAC1B,EAAA,IAAI0D,OAAO,GAAGN,gBAAgB,CAACV,GAAG,EAAC1C,KAAK,CAAC,CAAA;IACzC,IAAG,CAACsD,IAAI,EAAC;EACLA,IAAAA,IAAI,GAAGI,OAAO,CAAA;EAClB,GAAA;EACAH,EAAAA,YAAY,GAAGG,OAAO,CAAA;EACtBF,EAAAA,KAAK,CAACjB,IAAI,CAACmB,OAAO,CAAC,CAAA;EACvB,CAAA;EAEA,SAASC,MAAMA,CAAC5B,IAAI,EAAE;EAAE;EACpB;EACA;IACAA,IAAI,GAAGA,IAAI,CAAC6B,OAAO,CAAC,IAAI,EAAC,EAAE,CAAC,CAAE;EAC9B;EACA;EACA,EAAA,IAAG7B,IAAI,EAAE;EACLwB,IAAAA,YAAY,CAAChC,QAAQ,CAACgB,IAAI,CAAC;EACvBV,MAAAA,IAAI,EAAC,CAAC;EACNE,MAAAA,IAAI,EAAJA,IAAAA;EAGJ,KAAC,CAAC,CAAA;EACN,GAAA;EAEJ,CAAA;EACA,SAAS8B,GAAGA,CAACnB,GAAG,EAAE;EAAE;EAChB,EAAA,IAAIgB,OAAO,GAAGF,KAAK,CAACM,GAAG,EAAE,CAAE;IAC3BP,YAAY,GAAGC,KAAK,CAACA,KAAK,CAACrC,MAAM,GAAC,CAAC,CAAC,CAAA;EACpC,EAAA,IAAGoC,YAAY,EAAC;EAAE;EACdG,IAAAA,OAAO,CAACL,MAAM,GAAGE,YAAY,CAACb,GAAG,CAAA;EACjCa,IAAAA,YAAY,CAAChC,QAAQ,CAACgB,IAAI,CAACmB,OAAO,CAAC,CAAA;EACvC,GAAA;EACJ,CAAA;;EAEA;EACO,SAASK,SAASA,CAACC,IAAI,EAAE;EAC5B;EACA,EAAA,OAAOA,IAAI,EAAE;EAAG;EACZ;MACA,IAAIC,OAAO,GAAGD,IAAI,CAACE,OAAO,CAAC,GAAG,CAAC,CAAC;MAChC,IAAID,OAAO,KAAK,CAAC,EAAE;EAAE;EACjB;EACA,MAAA,IAAME,aAAa,GAAGC,aAAa,EAAE,CAAC;EACtC,MAAA,IAAID,aAAa,EAAE;UACfV,KAAK,CAACU,aAAa,CAACE,OAAO,EAAEF,aAAa,CAACnE,KAAK,CAAC,CAAA;EACjD,QAAA,SAAA;EACJ,OAAA;EACA;EACA,MAAA,IAAIsE,WAAW,GAAGN,IAAI,CAAC5B,KAAK,CAACa,MAAM,CAAC,CAAA;EACpC;EACA,MAAA,IAAIqB,WAAW,EAAE;EACbC,QAAAA,OAAO,CAACD,WAAW,CAAC,CAAC,CAAC,CAACnD,MAAM,CAAC,CAAA;EAC9B0C,QAAAA,GAAG,CAACS,WAAW,CAAC,CAAC,CAAC,CAAC,CAAA;EACnB,QAAA,SAAA;EACJ,OAAA;EACJ,KAAA;;EAEA;EACA,IAAA,IAAIvC,IAAI,GAAA,KAAA,CAAA,CAAA;MACR,IAAIkC,OAAO,GAAG,CAAC,EAAE;EACb;EACA;QACAlC,IAAI,GAAGiC,IAAI,CAACQ,SAAS,CAAC,CAAC,EAAEP,OAAO,CAAC,CAAA;EACjC;EACJ,KAAA;;EACA,IAAA,IAAIlC,IAAI,EAAE;EACNwC,MAAAA,OAAO,CAACxC,IAAI,CAACZ,MAAM,CAAC,CAAA;QACpBwC,MAAM,CAAC5B,IAAI,CAAC,CAAA;EACZ;EACJ,KAAA;EACA;EACJ,GAAA;;IACA,SAASqC,aAAaA,GAAG;EACrB;MACA,IAAMX,KAAK,GAAGO,IAAI,CAAC5B,KAAK,CAACW,YAAY,CAAC,CAAC;EACvC,IAAA,IAAIU,KAAK,EAAE;EACP;EACA;EACA,MAAA,IAAIrB,KAAK,GAAG;EACRiC,QAAAA,OAAO,EAAEZ,KAAK,CAAC,CAAC,CAAC;EACjBzD,QAAAA,KAAK,EAAE,EAAA;SACV,CAAA;EACD;EACAuE,MAAAA,OAAO,CAACd,KAAK,CAAC,CAAC,CAAC,CAACtC,MAAM,CAAC,CAAA;EACxB;EACA;EACA;EACA,MAAA,IAAIhB,IAAI,CAAA;EACR,MAAA,IAAI0D,IAAG,CAAA;QACP,OAAO,EAAEA,IAAG,GAAGG,IAAI,CAAC5B,KAAK,CAACe,aAAa,CAAC,CAAC,KAAKhD,IAAI,GAAG6D,IAAI,CAAC5B,KAAK,CAACc,SAAS,CAAC,CAAC,EAAE;EACzE;EACAd,QAAAA,KAAK,CAACpC,KAAK,CAACuC,IAAI,CAAC;EAAElC,UAAAA,IAAI,EAAEF,IAAI,CAAC,CAAC,CAAC;EAAEI,UAAAA,KAAK,EAAEJ,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAC,IAAIA,IAAI,CAAC,CAAC,CAAA;EAAE,SAAC,CAAC,CAAA;EACzEoE,QAAAA,OAAO,CAACpE,IAAI,CAAC,CAAC,CAAC,CAACgB,MAAM,CAAC,CAAA;EAE3B,OAAA;;EAGA;EACA,MAAA,IAAI0C,IAAG,EAAE;EACL;EACAU,QAAAA,OAAO,CAACV,IAAG,CAAC,CAAC,CAAC,CAAC1C,MAAM,CAAC,CAAA;EACtB,QAAA,OAAOiB,KAAK,CAAA;EAChB,OAAA;EACJ,KAAA;EAEJ,GAAA;IACA,SAASmC,OAAOA,CAACE,CAAC,EAAE;EAChB;EACAT,IAAAA,IAAI,GAAGA,IAAI,CAACQ,SAAS,CAACC,CAAC,CAAC,CAAA;EACxB;EACJ,GAAA;EACA;EACA,EAAA,OAAOnB,IAAI,CAAA;EACf;;ECzJO,SAASoB,iBAAiBA,CAACC,QAAQ,EAAE;EAExC;EACA,EAAA,IAAIC,GAAG,GAAGb,SAAS,CAACY,QAAQ,CAAC,CAAA;EAC7B;;EAEA;EACA,EAAA,IAAIlC,IAAI,GAAGX,QAAQ,CAAC8C,GAAG,CAAC,CAAI;;EAE5B;EACA;EACJ;EACA;EACA;IACI,IAAIC,MAAM,GAAG,IAAIC,QAAQ,sBAAA9D,MAAA,CAAsByB,IAAI,EAAI,GAAA,CAAA,CAAA,CAAA;EACvD,EAAA,OAAOoC,MAAM,CAAA;EACjB;;ECnBA;EACA;EACA,IAAIE,oBAAoB,GAAGC,KAAK,CAACC,SAAS,CAAA;;EAE1C;EACA;EACA;EACA;EACO,IAAIC,YAAY,GAAGC,MAAM,CAACC,MAAM,CAACL,oBAAoB,CAAC,CAAA;;EAE7D;EACA,IAAIM,OAAO,GAAG,CACV,MAAM,EACN,KAAK,EACL,SAAS,EACT,OAAO,EACP,QAAQ,CACX,CAAA;;EAED;EACAA,OAAO,CAAC5E,OAAO,CAAC,UAAAC,IAAI,EAAI;EACpBwE,EAAAA,YAAY,CAACxE,IAAI,CAAC,GAAG,YAAmB;EAAA,IAAA,KAAA,IAAA4E,IAAA,GAAAC,SAAA,CAAApE,MAAA,EAANqE,IAAI,GAAAR,IAAAA,KAAA,CAAAM,IAAA,GAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAAJD,MAAAA,IAAI,CAAAC,IAAA,CAAAF,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,KAAA;EAClC;EACA;EACA;EACR;EACA;EACA;EACQ,IAAA,IAAIC,MAAM,GAAGX,oBAAoB,CAACrE,IAAI,CAAC,CAACiF,KAAK,CAAC,IAAI,EAAEH,IAAI,CAAC,CAAA;EACzD;EACA;EACA,IAAA,IAAII,QAAQ,CAAA;EACZ,IAAA,QAAQlF,IAAI;EACR,MAAA,KAAK,MAAM,CAAA;EACX,MAAA,KAAK,SAAS;EACVkF,QAAAA,QAAQ,GAAGJ,IAAI,CAAA;EACf,QAAA,MAAA;EACJ,MAAA,KAAK,QAAQ;EACTI,QAAAA,QAAQ,GAAGJ,IAAI,CAACK,MAAM,CAAC,CAAC,CAAC,CAAG;EAC5B,QAAA,MAAA;EAAM,KAAA;EAGd;;EAEA,IAAA,IAAIC,EAAE,GAAG,IAAI,CAACC,MAAM,CAAA;EACpB,IAAA,IAAGH,QAAQ,EAAC;EACRE,MAAAA,EAAE,CAACE,aAAa,CAACJ,QAAQ,CAAC,CAAC;EAC/B,KAAA;;EACA,IAAA,OAAOF,MAAM,CAAA;KAChB,CAAA;EACL,CAAC,CAAC;;EChDK,SAASO,QAAQA,CAACC,IAAI,EAAE;EAC3B;;EAEA;EACA;IACA,IAAIC,OAAA,CAAOD,IAAI,CAAA,IAAI,QAAQ,IAAIA,IAAI,KAAK,IAAI,EAAE;EAC1C,IAAA,OAAOA,IAAI,CAAA;EACf,GAAA;EACA;EACA,EAAA,OAAO,IAAIE,QAAQ,CAACF,IAAI,CAAC,CAAA;EAE7B,CAAA;EAAC,IAEKE,QAAQ,gBAAA,YAAA;IACV,SAAAA,QAAAA,CAAY7F,KAAK,EAAE;EAAA8F,IAAAA,eAAA,OAAAD,QAAA,CAAA,CAAA;EACf;EACAjB,IAAAA,MAAM,CAACmB,cAAc,CAAC/F,KAAK,EAAE,QAAQ,EAAE;EACnCgG,MAAAA,UAAU,EAAE,KAAK;EACjBhG,MAAAA,KAAK,EAAE,IAAA;EACX,KAAC,CAAC,CAAA;;EAEF;EACA;EACA,IAAA,IAAIyE,KAAK,CAACwB,OAAO,CAACjG,KAAK,CAAC,EAAE;EACtB;EACA;QACAA,KAAK,CAACkG,SAAS,GAAGvB,YAAY,CAAA;EAC9B;EACA;EACA;EACA,MAAA,IAAI,CAACc,aAAa,CAACzF,KAAK,CAAC,CAAC;EAC9B,KAAC,MAAM;EACH;EACA,MAAA,IAAI,CAACmG,IAAI,CAACnG,KAAK,CAAC,CAAE;EACtB,KAAA;EAEJ,GAAA;EAACoG,EAAAA,YAAA,CAAAP,QAAA,EAAA,CAAA;MAAAtF,GAAA,EAAA,MAAA;EAAAP,IAAAA,KAAA,EACD,SAAAmG,IAAKR,CAAAA,IAAI,EAAE;EAAG;EACV;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;EAEA;EACA,MAAA,KAAA,IAAAU,EAAA,GAAAC,CAAAA,EAAAA,eAAA,GAAyB1B,MAAM,CAAC2B,OAAO,CAACZ,IAAI,CAAC,EAAAU,EAAA,GAAAC,eAAA,CAAA1F,MAAA,EAAAyF,EAAA,EAAE,EAAA;EAA1C,QAAA,IAAAG,kBAAA,GAAAlG,cAAA,CAAAgG,eAAA,CAAAD,EAAA,CAAA,EAAA,CAAA,CAAA;EAAK9F,UAAAA,GAAG,GAAAiG,kBAAA,CAAA,CAAA,CAAA;EAAExG,UAAAA,KAAK,GAAAwG,kBAAA,CAAA,CAAA,CAAA,CAAA;EAChBC,QAAAA,eAAe,CAACd,IAAI,EAAEpF,GAAG,EAAEP,KAAK,CAAC,CAAA;EACrC,OAAA;EACJ,KAAA;EAAC,GAAA,EAAA;MAAAO,GAAA,EAAA,eAAA;EAAAP,IAAAA,KAAA,EAED,SAAAyF,aAAczF,CAAAA,KAAK,EAAE;EAAG;EACpB,MAAA,KAAK,IAAIH,CAAC,GAAG,CAAC,EAAEA,CAAC,GAAGG,KAAK,CAACY,MAAM,EAAEf,CAAC,EAAE,EAAE;EACnC6F,QAAAA,QAAQ,CAAC1F,KAAK,CAACH,CAAC,CAAC,CAAC,CAAA;EACtB,OAAA;EACJ,KAAA;EAAC,GAAA,CAAA,CAAA,CAAA;EAAA,EAAA,OAAAgG,QAAA,CAAA;EAAA,CAGL,EAAA,CAAA;EACA,SAASY,eAAeA,CAACd,IAAI,EAAEpF,GAAG,EAAEP,KAAK,EAAE;IACvC0F,QAAQ,CAAC1F,KAAK,CAAC,CAAC;EAChB4E,EAAAA,MAAM,CAACmB,cAAc,CAACJ,IAAI,EAAEpF,GAAG,EAAE;EAC7B;MACAmG,GAAG,EAAA,SAAAA,MAAG;EACF;EACA,MAAA,OAAO1G,KAAK,CAAE;OACjB;MACD2G,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACV;EACA,MAAA,IAAIA,QAAQ,KAAK5G,KAAK,EAAE,OAAOA,KAAK,CAAA;QACpC0F,QAAQ,CAACkB,QAAQ,CAAC,CAAE;EACpB5G,MAAAA,KAAK,GAAG4G,QAAQ,CAAA;EACpB,KAAA;EACJ,GAAC,CAAC,CAAA;EACN,CAAA;;EAGA;;EAEA;;EAEA;EACA;EACA;EACA;;EAGA;EACA;;EC1FO,SAASC,SAASA,CAACC,EAAE,EAAE;EAC1B,EAAA,IAAIC,IAAI,GAAGD,EAAE,CAACE,QAAQ,CAAA;EACtB;EACA;IACA,IAAGD,IAAI,CAACE,KAAK,EAAC,CAEd;IACA,IAAGF,IAAI,CAACpB,IAAI,EAAC;MACTuB,QAAQ,CAACJ,EAAE,CAAC,CAAA;EAChB,GAAA;IACA,IAAGC,IAAI,CAACI,KAAK,EAAC,CAEd;IACA,IAAGJ,IAAI,CAACK,QAAQ,EAAC,CAEjB;IACA,IAAGL,IAAI,CAACjC,OAAO,EAAC,CAEhB;;EAYA;IACA,SAASoC,QAAQA,CAACJ,EAAE,EAAE;EAClB;EACA,IAAA,IAAInB,IAAI,GAAGmB,EAAE,CAACE,QAAQ,CAACrB,IAAI,CAAA;EAC3BmB,IAAAA,EAAE,CAACO,KAAK,GAAG,OAAO1B,IAAI,KAAK,UAAU,GAAGA,IAAI,CAAC2B,IAAI,CAACR,EAAE,CAAC,GAACnB,IAAI,CAAC;MAC3DA,IAAI,GAAGmB,EAAE,CAACO,KAAK,CAAA;EACf;EACA;;EAEA,IAAA,KAAI,IAAI9G,GAAG,IAAIoF,IAAI,EAAC;EAChB4B,MAAAA,KAAK,CAACT,EAAE,EAAC,OAAO,EAACvG,GAAG,CAAC,CAAA;EACzB,KAAA;MACAmF,QAAQ,CAACC,IAAI,CAAC,CAAA;EAClB,GAAA;EAEA,EAAA,SAAS4B,KAAKA,CAACT,EAAE,EAACU,MAAM,EAACjH,GAAG,EAAE;EAC1BqE,IAAAA,MAAM,CAACmB,cAAc,CAACe,EAAE,EAACvG,GAAG,EAAC;QACzBmG,GAAG,EAAA,SAAAA,MAAG;EACF,QAAA,OAAOI,EAAE,CAACU,MAAM,CAAC,CAACjH,GAAG,CAAC,CAAA;SACzB;QACDoG,GAAG,EAAA,SAAAA,GAACC,CAAAA,QAAQ,EAAE;EACVE,QAAAA,EAAE,CAACU,MAAM,CAAC,CAACjH,GAAG,CAAC,GAAGqG,QAAQ,CAAA;EAC9B,OAAA;EACJ,KAAC,CAAC,CAAA;EACN,GAAA;;EAEA;EAKJ;;EC/DO,SAASa,KAAKA,CAACC,QAAQ,EAAEC,KAAK,EAAE;EACnCvF,EAAAA,OAAO,CAACC,GAAG,CAACqF,QAAQ,EAAEC,KAAK,CAAC,CAAA;EAC5B;EACA;EACA,EAAA,IAAI5G,EAAE,GAAG6G,QAAQ,CAACD,KAAK,CAAC,CAAA;EACxB;EACA;EACI;EACR;EACA;EACA;EACA;;EAEI;EACA,EAAA,IAAIE,QAAQ,GAAGH,QAAQ,CAACI,UAAU,CAAG;EACrC;IACAD,QAAQ,CAACE,YAAY,CAAChH,EAAE,EAAC2G,QAAQ,CAACM,WAAW,CAAC,CAAA;EAC9C;EACAH,EAAAA,QAAQ,CAACI,WAAW,CAACP,QAAQ,CAAC,CAAA;EAC9B,EAAA,OAAO3G,EAAE,CAAA;EACT;EACJ,CAAA;;EAGA;EACA,SAAS6G,QAAQA,CAACD,KAAK,EAAE;EAAE;EACvB,EAAA,IAAMxF,GAAG,GAAgCwF,KAAK,CAAxCxF,GAAG,CAAA;MAAEnB,QAAQ,GAAsB2G,KAAK,CAAnC3G,QAAQ,CAAA;MAAsB2G,KAAK,CAAzBpH,GAAG,CAAA;MAAiBoH,KAAK,CAApBhC,IAAI,CAAA;UAAEnE,IAAI,GAAKmG,KAAK,CAAdnG,KAAI;;EAEpC;EACA,EAAA,IAAI,OAAOW,GAAG,KAAK,QAAQ,EAAE;EAAE;MAC3BwF,KAAK,CAAC5G,EAAE,GAAGmH,QAAQ,CAACC,aAAa,CAAChG,GAAG,CAAC,CAAE;EACxC;EACA,IAAA,IAAInB,QAAQ,CAACJ,MAAM,GAAG,CAAC,EAAE;EAAE;EACvBI,MAAAA,QAAQ,CAACd,OAAO,CAAC,UAAAgB,KAAK,EAAI;EACtB;UACAyG,KAAK,CAAC5G,EAAE,CAACqH,WAAW,CAACR,QAAQ,CAAC1G,KAAK,CAAC,CAAC,CAAA;EACzC,OAAC,CAAC,CAAA;EAEN,KAAA;EACJ,GAAC,MAAI;EAAE;MACHyG,KAAK,CAAC5G,EAAE,GAAGmH,QAAQ,CAACG,cAAc,CAAC7G,IAAI,CAAC,CAAA;EAC5C,GAAA;IACA,OAAOmG,KAAK,CAAC5G,EAAE,CAAA;EAGnB,CAAA;;EAIA;;EAEA;EACA;EACA;EACA;;ECpDA;EACO,SAASuH,aAAaA,CAACxB,EAAE,EAAC/F,EAAE,EAAC;EAChC;EACA+F,EAAAA,EAAE,CAACyB,OAAO,CAACzB,EAAE,CAAC0B,OAAO,EAAE,CAAC,CAAA;EAC5B,CAAA;;EAEA;EACO,SAASC,cAAcA,CAACC,GAAG,EAAE;EAChC;EACAA,EAAAA,GAAG,CAAChE,SAAS,CAAC6D,OAAO,GAAG,UAASZ,KAAK,EAAC;EACnC;MACA,IAAIb,EAAE,GAAG,IAAI,CAAA;EACb;EACA;MACAA,EAAE,CAAC6B,GAAG,GAAIlB,KAAK,CAACX,EAAE,CAAC6B,GAAG,EAAChB,KAAK,CAAC,CAAA;KAChC,CAAA;EAEL,CAAA;;EAEA;;ECjBA;EACO,SAASiB,SAASA,CAACF,GAAG,EAAE;EAC3B;EACAA,EAAAA,GAAG,CAAChE,SAAS,CAACmE,KAAK,GAAG,UAAUC,OAAO,EAAE;EACrC;;EAEA;MACA,IAAIhC,EAAE,GAAG,IAAI,CAAA;;EAEb;MACAA,EAAE,CAACE,QAAQ,GAAG8B,OAAO,CAAA;;EAErB;MACAjC,SAAS,CAACC,EAAE,CAAC,CAAA;EACb1E,IAAAA,OAAO,CAACC,GAAG,CAACyE,EAAE,CAAC,CAAA;;EAEf;EACA,IAAA,IAAIA,EAAE,CAACE,QAAQ,CAACjG,EAAE,EAAE;QAChB+F,EAAE,CAACiC,MAAM,CAACjC,EAAE,CAACE,QAAQ,CAACjG,EAAE,CAAC,CAAA;EAE7B,KAAA;KAEH,CAAA;;EAED;EACA2H,EAAAA,GAAG,CAAChE,SAAS,CAACqE,MAAM,GAAG,UAAUhI,EAAE,EAAE;EACjCqB,IAAAA,OAAO,CAACC,GAAG,CAACtB,EAAE,CAAC,CAAA;EACf;MACA,IAAI+F,EAAE,GAAG,IAAI,CAAA;EACb/F,IAAAA,EAAE,GAAGmH,QAAQ,CAACc,aAAa,CAACjI,EAAE,CAAC,CAAE;MACjC+F,EAAE,CAAC6B,GAAG,GAAG5H,EAAE,CAAA;EACX,IAAA,IAAI+H,OAAO,GAAGhC,EAAE,CAACE,QAAQ,CAAA;EACzB,IAAA,IAAG,CAAC8B,OAAO,CAACxE,MAAM,EAAE;EAAG;EACnB,MAAA,IAAIF,QAAQ,GAAG0E,OAAO,CAAC1E,QAAQ,CAAA;EAC/B,MAAA,IAAG,CAACA,QAAQ,IAAIrD,EAAE,EAAE;EAChB;UACAA,EAAE,GAAGA,EAAE,CAACkI,SAAS,CAAA;EACjB7G,QAAAA,OAAO,CAACC,GAAG,CAACtB,EAAE,CAAC,CAAA;;EAEf;EACA,QAAA,IAAIuD,MAAM,GAAGH,iBAAiB,CAACpD,EAAE,CAAC,CAAA;EAClCqB,QAAAA,OAAO,CAACC,GAAG,CAACiC,MAAM,CAAC,CAAA;EACnB;UACAwE,OAAO,CAACxE,MAAM,GAAGA,MAAM,CAAA;EAC3B,OAAA;EACJ,KAAA;EACA;EACAgE,IAAAA,aAAa,CAACxB,EAAK,CAAC,CAAE;EACA;KACzB,CAAA;EACL,CAAA;;EAEA;EACC;EACD;EACA;EACA;EACA;EACA;EACA;;EC/DO,SAASoC,WAAWA,CAACR,GAAG,EAAE;EAC7B;EACAA,EAAAA,GAAG,CAAChE,SAAS,CAACyE,EAAE,GAAG,YAAY;EAC3B;EACA,IAAA,OAAOhB,aAAa,CAAA/C,KAAA,CAAA,KAAA,CAAA,EAAIJ,SAAS,CAAC,CAAA;KACrC,CAAA;EACD;EACA0D,EAAAA,GAAG,CAAChE,SAAS,CAAC0E,EAAE,GAAG,UAAS5H,IAAI,EAAE;MAC9B,OAAO6H,UAAU,CAAC7H,IAAI,CAAC,CAAA;KAC1B,CAAA;EACD;EACAkH,EAAAA,GAAG,CAAChE,SAAS,CAAC4E,EAAE,GAAG,UAAS9I,GAAG,EAAE;EAC7B,IAAA,OAAOA,GAAG,KAAK,IAAI,GAAE,EAAE,GAAEoF,OAAA,CAAOpF,GAAG,MAAI,QAAQ,GAAEE,IAAI,CAACC,SAAS,CAACH,GAAG,CAAC,GAACA,GAAG,CAAA;KAC3E,CAAA;EAEDkI,EAAAA,GAAG,CAAChE,SAAS,CAAC8D,OAAO,GAAG,YAAW;EAAE;MACjC,IAAI1B,EAAE,GAAG,IAAI,CAAG;EAChB,IAAA,IAAIxC,MAAM,GAAGwC,EAAE,CAACE,QAAQ,CAAC1C,MAAM,CAAI;EACnC,IAAA,IAAIqD,KAAK,GAAGrD,MAAM,CAACgD,IAAI,CAAC,IAAI,CAAC,CAAA;EAC7B;EACA,IAAA,OAAOK,KAAK,CAAA;KACf,CAAA;EAEL,CAAA;;EAEA;EACA,SAASQ,aAAaA,CAAChG,GAAG,EAAqB;EAAA,EAAA,IAApBwD,IAAI,GAAAX,SAAA,CAAApE,MAAA,GAAA,CAAA,IAAAoE,SAAA,CAAA,CAAA,CAAA,KAAAuE,SAAA,GAAAvE,SAAA,CAAA,CAAA,CAAA,GAAC,EAAE,CAAA;IAAA,KAAAD,IAAAA,IAAA,GAAAC,SAAA,CAAApE,MAAA,EAAII,QAAQ,OAAAyD,KAAA,CAAAM,IAAA,GAAAA,CAAAA,GAAAA,IAAA,WAAAG,IAAA,GAAA,CAAA,EAAAA,IAAA,GAAAH,IAAA,EAAAG,IAAA,EAAA,EAAA;EAARlE,IAAAA,QAAQ,CAAAkE,IAAA,GAAAF,CAAAA,CAAAA,GAAAA,SAAA,CAAAE,IAAA,CAAA,CAAA;EAAA,GAAA;IAC1C,OAAOyC,KAAK,CAACxF,GAAG,EAACwD,IAAI,EAACA,IAAI,CAACpF,GAAG,EAACS,QAAQ,CAAC,CAAA;EAC5C,CAAA;;EAEA;EACA,SAASqI,UAAUA,CAAC7H,IAAI,EAAE;IACtB,OAAOmG,KAAK,CAAC4B,SAAS,EAACA,SAAS,EAACA,SAAS,EAACA,SAAS,EAAC/H,IAAI,CAAC,CAAA;EAC9D,CAAA;;EAGA;EACA,SAASmG,KAAKA,CAACxF,GAAG,EAACwD,IAAI,EAACpF,GAAG,EAACS,QAAQ,EAACQ,IAAI,EAAE;IACvC,OAAO;EACHW,IAAAA,GAAG,EAAHA,GAAG;EACHwD,IAAAA,IAAI,EAAJA,IAAI;EACJpF,IAAAA,GAAG,EAAHA,GAAG;EACHS,IAAAA,QAAQ,EAARA,QAAQ;EACRQ,IAAAA,IAAI,EAAJA,IAAAA;KAEH,CAAA;EACL,CAAA;;EAEA;;EAEA;EACA;EACA;EACA;EACA;EACA;EACA;EACA;;ECnDA,SAASkH,GAAGA,CAACI,OAAO,EAAE;EAClB;EACA;EACA,EAAA,IAAI,CAACD,KAAK,CAACC,OAAO,CAAC,CAAA;EAEvB,CAAA;;EAEA;EACAF,SAAS,CAACF,GAAG,CAAC,CAAA;;EAEd;EACAD,cAAc,CAACC,GAAG,CAAC,CAAC;;EAEpB;EACAQ,WAAW,CAACR,GAAG,CAAC,CAAE;;;;;;;;"}